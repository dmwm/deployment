# vim: set ft=sh sw=2 ts=8 et :
deploy_an_workqueue_variants="default prod preprod dev"

deploy_an_workqueue_deps()
{
  deploy couchdb
}

deploy_an_workqueue_prep()
{
  mkproj cache
}

deploy_an_workqueue_sw()
{
  deploy_pkg \
    -a dmwm-service-cert.pem:wmcore/dmwm-service-cert.pem \
    -a dmwm-service-key.pem:wmcore/dmwm-service-key.pem \
    comp cms+an_workqueue

  if grep -rq "replace me" $project_auth; then
    note "WARNING: replace certificates in $project_auth with real ones"
  else :; fi

  cp -p $project_config/GlobalWorkQueueConfig-${variant}.py $project_config/GlobalWorkQueueConfig.py
}

deploy_an_workqueue_post()
{
  # Do cache cleanup
  local cmd="rm -rf $root/state/an_workqueue/cache/*"
  $nogroups || cmd="sudo -H -u _an_workqueue bashs -l -c \"${cmd}\""
  eval $cmd

  # Tell couchdb to push an_workqueue apps on the next restart
  local manage=$root/current/config/an_workqueue/an_workqueue_task
  local couchdb_config=$root/current/config/couchdb
  local couchdb_state=$root/state/couchdb
  local couch_url="http://localhost:5984"

  for area in stagingarea replication; do
    rm -f $couchdb_state/$area/an_workqueue
    touch $couchdb_state/$area/an_workqueue
  done

  # push app
  echo "$project_config/an_workqueue_task pushcouchapp $couch_url" \
      >> $couchdb_state/stagingarea/an_workqueue

  for db in analysis_workqueue analysis_workqueue_inbox; do
    # clean views on startup
    echo "$couchdb_config/manage cleanviews $db 'I did read documentation'" \
      >> $couchdb_state/stagingarea/an_workqueue
  done

  # Setup an_workqueue cronjobs
  local cmd="$manage reqmgr_sync"
  $nogroups || cmd="sudo -H -u _an_workqueue bashs -l -c \"${cmd}\""
  local req_sync="5-45/20 * * * * $cmd"

  local cmd="$manage location_refresh"
  $nogroups || cmd="sudo -H -u _an_workqueue bashs -l -c \"${cmd}\""
  local locations="30 * * * * $cmd"

  local cmd="$manage housekeep"
  $nogroups || cmd="sudo -H -u _an_workqueue bashs -l -c \"${cmd}\""
  local housekeep="15-55/20 * * * * $cmd"

  (mkcrontab;
   case $host in
     vocms10[67] | vocms13[2689] | vocms16[13])
       ;;
     * )
       echo "${req_sync}"
       echo "${locations}"
       echo "${housekeep}"
       ;;
   esac) | crontab -
}

deploy_an_workqueue_auth()
{
  case $1 in
    */*-cert.pem )
      echo "replace me with your dmwm service certificate" ;;
    */*-key.pem )
      echo "replace me with your dmwm service key" ;;
  esac
}
