# vim: set ft=sh sw=2 ts=8 et :
deploy_reqmgr2_variants="default prod preprod dev"

deploy_reqmgr2_deps()
{
  deploy $stage backend
  deploy $stage wmcore-auth
  deploy $stage couchdb
  deploy $stage reqmon $variant
  deploy $stage acdcserver $variant

  # Use the couch databases from ReqMgr1. We must make sure ReqMgr1 is
  # on the same ReqMgr2 tag, otherwise the ReqMgr2's couchapps will be outdated.
  deploy $stage reqmgr $variant
}

deploy_reqmgr2_prep()
{
  mkproj tmp
}

deploy_reqmgr2_sw()
{
  deploy_pkg \
    -a dmwm-service-cert.pem:wmcore/dmwm-service-cert.pem \
    -a dmwm-service-key.pem:wmcore/dmwm-service-key.pem \
    comp cms+reqmgr2

  if grep -rq "replace me" $project_auth; then
    note "WARNING: replace certificates in $project_auth with real ones"
  else :; fi

  case $variant in
    prod )    base_url="https://cmsweb.cern.ch"         dbs_ins="prod";;
    preprod ) base_url="https://cmsweb-testbed.cern.ch" dbs_ins="int";;
    dev )     base_url="https://cmsweb-dev.cern.ch"     dbs_ins="dev";;
    * )       base_url="https://`hostname -f`"          dbs_ins="private_vm";;
  esac
  perl -p -i -e "s{\"\@\@BASE_URL\@\@\"}{\"$base_url\"}g; \
                 s{\"\@\@DBS_INS\@\@\"}{\"$dbs_ins\"}g"   \
       $root/$cfgversion/config/$project/config.py
}

deploy_reqmgr2_post()
{
  case $host in vocms013[89] ) disable;;  * ) enable;; esac

  # ReqMgr2 specific couchdb stuff
  # Tell couch to pick up reqmgr on the next restart
  local reqmgrapp=$root/current/apps/reqmgr2
  for couch in couchdb:5984; do
    echo "couchapp push $reqmgrapp/data/couchapps/ReqMgrAux" \
         "http://localhost:${couch##*:}/reqmgr_auxiliary" \
         > $root/state/${couch%%:*}/stagingarea/reqmgr2
    echo "couchapp push $reqmgrapp/data/couchapps/WMDataMining" \
             "http://localhost:${couch##*:}/wmdatamining" \
         >> $root/state/${couch%%:*}/stagingarea/reqmgr2
  done

  # Once we have retired ReqMgr1, we should configure couch
  # here to push the ReqMgr2 needed databases/couchapps.

  # Setup reqmgr2 cronjobs
  (mkcrontab
   sysboot
   case $variant:$host in
     prod:vocms0140 | preprod:vocms0131 | dev:vocms0127 | dev:vocms0126 | default:* )
       local cmd="$project_config/manage updateversions 'I did read documentation'"
       $nogroups || cmd="sudo -H -u _reqmgr2 bashs -l -c \"${cmd}\""
       echo "58 * * * * $cmd" ;;
     * ) ;;
   esac) | crontab -
}

deploy_reqmgr2_auth()
{
  case $1 in
    */*-cert.pem ) echo "replace me with your dmwm service certificate" ;;
    */*-key.pem )  echo "replace me with your dmwm service key" ;;
  esac
}
