# vim: set ft=sh sw=2 ts=8 et :
deploy_couchdb_variants="default offsite"

deploy_couchdb_deps()
{
  deploy backend
  deploy wmcore-auth
}

deploy_couchdb_prep()
{
  mkproj database replication stagingarea backup
  case $variant in default ) ;; * ) mkproxy ;; esac
}

deploy_couchdb_sw()
{
  rm -f $project_auth/hmackey.ini
  deploy_pkg -a couchdb/hmackey.ini comp external+couchdb
  perl -p -i -e "s|{ROOT}|$root|g" $project_config/local.ini

  case $variant in
    default )
      ;;
    * )
      perl -p -i -e "s|bind_address = 0.0.0.0|bind_address = 127.0.0.1|g" $project_config/local.ini
      (echo
       echo "[ssl]"
       echo "cert_file = $project_state/proxy/proxy.cert"
       echo "key_file = $project_state/proxy/proxy.cert"
       echo "cacert_file = $project_state/proxy/proxy.cert"
       echo
       echo "[replicator]"
       echo "max_replication_retry_count = infinity"
      ) >> $project_config/local.ini
      ;;
  esac
}

deploy_couchdb_post()
{
  (mkcrontab
   case $host in
     vocms34 | vocms13[2689] | vocms16[13] )
       disable ;;
     * )
       enable
       sysboot
       local cmd="$project_config/manage compact all 'I did read documentation'"
       $nogroups || cmd="sudo -H -u _couchdb bashs -l -c \"${cmd}\""
       echo "12 0 * * * $cmd"

       # Daily backup the databases to other cluster machines
       case $host in vocms140 ) tohost=vocms138 ;; vocms133 ) tohost=vocms132 ;; vocms127 ) tohost=vocms127 ;; * ) tohost= ;; esac
       [ -z "$tohost" ] ||
         echo "0 21 * * * $project_config/manage backup $tohost:$project_state/backup/$host 'I did read documentation'"
       ;;
   esac) | crontab -

  # Weekly archive backups to castor
  case $host in
    vocms138 | vocms132 | vocms127 )
      klist -s # must have afs kerberos token
      (acrontab -l | { fgrep -v -e " $host $project_config/" || true; }
       echo "30 4 * * 0 $host $project_config/manage archive /castor/cern.ch/cms/archive/cmsweb/backups 'I did read documentation'") | acrontab
      ;;
    * )
      ;;
  esac
}

deploy_couchdb_auth()
{
  perl -e \
    'undef $/; print "[couch_cms_auth]\n";
     print "hmac_secret = ", unpack("h*", <STDIN>), "\n"' < \
    $root/current/auth/wmcore-auth/header-auth-key
}
