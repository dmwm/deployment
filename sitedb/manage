#!/bin/sh

##H Usage: manage ACTION [SECURITY-STRING]
##H
##H Available actions:
##H   help        show this help
##H   version     get current version of the service
##H   status      show current service's status
##H   sysboot     start server from crond if not running
##H   restart     (re)start the service
##H   start       (re)start the service
##H   stop        stop the service
##H
##H For more details please refer to operations page:
##H   https://twiki.cern.ch/twiki/bin/view/CMS/SiteDB

if [ $(id -un)  = cmsweb ]; then
  echo "ERROR: please use another account" 1>&2
  exit 1
fi

echo_e=-e bsdstart=bsdstart
case $(uname) in Darwin )
  md5sum() { md5 -r ${1+"$@"}; }
  echo_e= bsdstart=start
  ;;
esac

ME=$(basename $(dirname $0))
TOP=$(cd $(dirname $0)/../../.. && pwd)
ROOT=$(cd $(dirname $0)/../.. && pwd)
CFGDIR=$(dirname $0)
LOGDIR=$TOP/logs/$ME
STATEDIR=$TOP/state/$ME
CFGFILE=$CFGDIR/config.py
COLOR_OK="\\033[0;32m"        # LEGACY ONLY
COLOR_WARN="\\033[0;31m"      # LEGACY ONLY
COLOR_NORMAL="\\033[0;39m"    # LEGACY ONLY

. $ROOT/apps/$ME/etc/profile.d/env.sh
PYTHONPATH=$ROOT/auth/$ME:$PYTHONPATH

# Set up environment for legacy server if one was installed.
use_legacy=false
if [ -f $ROOT/auth/$ME/security.ini ]; then
  use_legacy=true
  export YUI_ROOT
  export SEC_MOD_INI=$ROOT/auth/$ME/security.ini
  export PYTHONPATH=$SITEDB_LEGACY_PYTHONPATH:$PYTHONPATH
  case $(hostname -s | tr '[:upper:]' '[:lower:]') in
   vocms34 | vocms136 | vocms16[13] )
     NODE=https://cmsweb.cern.ch ;;
   vocms132 | vocms133 )
     NODE=https://cmsweb-testbed.cern.ch ;;
   vocms127 )
     NODE=https://cmsweb-dev.cern.ch ;;
   * )
     NODE=https://$(hostname -f) ;;
  esac
  case $(uname) in Darwin )
    pgrep() { /opt/local/bin/pgrep ${1+"$@"}; }
    ;;
  esac
fi

# Start service conditionally on crond restart.
sysboot()
{
  wmc-httpd -v -d $STATEDIR -l "|rotatelogs $LOGDIR/sitedb-%Y%m%d.log 86400" $CFGFILE
  if $use_legacy; then
    [ $(pgrep -u $(id -u) -f "cmsWeb.*[/]sitedb" | wc -l) = 0 ] && start
  fi
}

# Start the service.
start()
{
  echo "starting $ME"
  wmc-httpd -r -d $STATEDIR -l "|rotatelogs $LOGDIR/sitedb-%Y%m%d.log 86400" $CFGFILE
  if $use_legacy; then
    cd $STATEDIR
    cmsWeb --base-url $NODE/sitedb -p 8055 --default-page /sitelist/ \
      --my-sitedb-ini=$ROOT/auth/$ME/sitedb.ini </dev/null 2>&1 |
      rotatelogs $LOGDIR/sitedb-legacy-%Y%m%d.log 86400 >/dev/null 2>&1 &
  fi
}

# Stop the service.
stop()
{
  echo "stopping $ME"
  wmc-httpd -k -d $STATEDIR $CFGFILE
  if $use_legacy; then
    for PID in $(pgrep -u $(id -u) -f "cmsWeb.*[/]sitedb" | sort -rn); do
      PSLINE=$(ps -o pid=,$bsdstart=,args= $PID |
               perl -n -e 'print join(" ", (split)[0..6])')
      echo "Stopping $PID ($PSLINE):"
      kill -9 $PID
    done
  fi
}

# Check if the server is running.
status()
{
  wmc-httpd -s -d $STATEDIR $CFGFILE
  if $use_legacy; then
    pid=$(pgrep -u $(id -u) -f "cmsWeb.*[/]sitedb" | sort -n)
    if [ X"$pid" = X ]; then
      echo $echo_e "$ME legacy is ${COLOR_WARN}NOT RUNNING${COLOR_NORMAL}."
    else
      echo $echo_e "$ME legacy is ${COLOR_OK}RUNNING${COLOR_NORMAL}, PID" $pid
    fi
  fi
}

# Verify the security string.
check()
{
  CHECK=$(echo "$1" | md5sum | awk '{print $1}')
  if [ $CHECK != 94e261a5a70785552d34a65068819993 ]; then
    echo "$0: cannot complete operation, please check documentation." 1>&2
    exit 2;
  fi
}

# Main routine, perform action requested on command line.
case ${1:-status} in
  sysboot )
    sysboot
    ;;

  start | restart )
    check "$2"
    stop
    start
    ;;

  status )
    status
    ;;

  stop )
    check "$2"
    stop
    ;;

  help )
    perl -ne '/^##H/ && do { s/^##H ?//; print }' < $0
    ;;

  version )
    echo "$SITEDB_VERSION"
    ;;

  * )
    echo "$0: unknown action '$1', please try '$0 help' or documentation." 1>&2
    exit 1
    ;;
esac
