# vim: set ft=sh sw=2 ts=8 et :
deploy_das_deps()
{
  deploy $stage backend
  deploy $stage wmcore-auth
  deploy $stage mongodb
  deploy $stage admin
}

deploy_das_prep()
{
  mkproj stagingarea
  mkproxy
}

deploy_das_sw()
{
  deploy_pkg comp cms+das
  perl -p -i -e "s|{ROOT}|$root/$cfgversion/apps/das|" $root/$cfgversion/config/$project/das2go-config.json
  case $host in
  vocms0126 )
    perl -p -i -e "s|prod/|dev/|g" $root/$cfgversion/config/$project/das2go-config.json
    perl -p -i -e "s|cmsweb|cmsweb-dev|g" $root/$cfgversion/config/$project/das2go-config.json
    ;;
 vocms0132 | vocms0731)
   perl -p -i -e "s|prod/|int/|g" $root/$cfgversion/config/$project/das2go-config.json
   perl -p -i -e "s|cmsweb|cmsweb-testbed|g" $root/$cfgversion/config/$project/das2go-config.json
   ;;
  *)
    ;;
  esac
}

deploy_das_post()
{
  case $host in vocms013[689] | vocms073[89] | vocms016[135] | vocms074[03456] | vocms0766 ) disable ;; * ) enable ;; esac
  (mkcrontab
   sysboot
   for action in das_cleanup:'0 0-23/2 * * *'; do
     local cmd="$project_config/manage cron ${action%%:*} 'I did read documentation'"
     $nogroups || cmd="sudo -H -u _das bashs -l -c \"${cmd}\""
     echo "${action##*:} $cmd"
   done
  ) | crontab -

  # Clean-up DB maps schema
  rm -f $project_state/stagingarea/{clean,update}_mapping_db.js
  rm -f $project_state/stagingarea/*-schema-stamp

  # Run fetchmaps to set DB maps schema
  local cmd="$project_config/manage fetchmaps 'I did read documentation'"
  $nogroups || cmd="sudo -H -u _das bashs -l -c \"${cmd}\""
  eval $cmd
}
