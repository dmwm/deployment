#!/bin/sh

# The dashes are needed to skip services that were deleted
# since we can't reshuffle the metric/exception ids.
# We may try to reuse them if we run out of ids.
services="- sitedb phedex_web{,app} filemover das_web - overview - \
   frontend phedex_graphs phedex_datasvc couchdb workqueue         \
   configcache dbs - - - mongodb - reqmgr                          \
   dqm_{caf,dev,offline,relval}_{agents,web} reqmon crabserver     \
   crabcache dmwmmon - - t0wmadatasvc dbsmigration reqmgr2 gitweb"

case $(uname) in Darwin ) echo_e= ;; * ) echo_e=-e ;; esac

tpl_metric()
{
   local n=$1; local name=$2; local desc=$3; local class=$4; local istr=$5
   echo $echo_e "\
\"/system/monitoring/metric/_$n\" = nlist(\n\
   \"name\", \"cmsweb_$name\",\n\
   \"descr\", \"CMSWEB $desc\",\n\
   \"class\", \"log.$class\",\n\
   \"param\", list(\"logfile\",\"/data/srv/logs/admin/feed.lemon\",\n\
                 \"istring\",\"$istr\",\n\
                 \"dformat\",\"%b %d %H:%M:%S\",\n\
                 \"sincelast\",\"10m\"),\n\
   \"period\", 60,\n\
   \"active\", true,\n\
   \"latestonly\", false,\n\
   \"local\", false,\n\
);\n"
}

tpl_except()
{
   local n=$1; local name=$2; local desc=$3; local corr=$4
   echo $echo_e "\
\"/system/monitoring/exception/_$n\" = nlist(\n\
    \"name\", \"cmsweb_$name\",\n\
    \"descr\", \"CMSWEB $desc\",\n\
    \"active\", true,\n\
    \"latestonly\", false,\n\
    \"importance\", 2,\n\
    \"minoccurs\", 5,\n\
    \"correlation\", \"$corr\",\n\
);\n"
}

echo "template customization/cms/webtools/backend/lemon;"
echo
echo "#-------------------------------------------------------------------"
echo "# ATTENTION: this template was generated by the admin/ProduceMetrics"
echo "#            script. Please do not make any changes directly here.  "
echo "#-------------------------------------------------------------------"
echo
n=0; for s in `eval echo $services`; do
   if [ "$s" != "-" ]; then
      if [ $n -ge 50 ]; then
         echo "WARNING: run out of IDs. Cannot create metrics/exceptions for $s." > /dev/stderr
         continue
      fi
      echo $echo_e "#\n# metrics and exceptions for $s\n#"
      tpl_metric $((8000+$n)) "${s}_log_errors" "$s service log errors"  "Parse" "${s//_/-} ERROR"
      tpl_metric $((8050+$n)) "${s}_running"    "$s number of processes" "Parse" "${s//_/-} PROCESS"
      tpl_metric $((8100+$n)) "${s}_failed"     "$s failed pings"        "Parse" "${s//_/-} PING FAILED"
      tpl_metric $((8150+$n)) "${s}_available"  "$s is available"        "Parse" "${s//_/-} PING OK"
      tpl_except $((32100+$n))    "${s}_is_down"           "$s service is not running"    \
                 "($((8050+$n)):1 < 1)"
      tpl_except $((32200+$n))    "${s}_is_not_responding" "$s service is not responding" \
                 "(($((8100+$n)):1 > 0) && ($((8150+$n)):1 < 1))"
   fi
   let n=n+1
done

echo $echo_e "#\n# other metrics\n#"
n=0
for s in dqm_{caf,dev,offline,relval}; do
   tpl_metric $((8200+$n)) "${s}_agents_import_queue" "$s import queue" "ParseExtract" \
              "${s//_/-}-agents REPORT AGENT=visDQMImportDaemon QUEUE=(\\\\\\\\d+)"
   let n=n+1
done
