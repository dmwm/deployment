# vim: set ft=sh sw=2 ts=8 et :
deploy_admin_variants="default devtools bare"
deploy_admin_deps()
{
  deploy $stage backend
}

deploy_admin_prep()
{
  mkproj
}

deploy_admin_sw()
{
  local p pkgs="rotatelogs pystack py2-psutil"
  case $variant in devtools )
    deploy_pkg comp cms+wmcore-devtools
    pkgs="$pkgs wmcore-devtools"
    ;;
  esac
  deploy_pkg comp external+py2-psutil
  deploy_pkg comp external+rotatelogs
  (for p in $pkgs; do
     echo ". $root/current/apps/$p/etc/profile.d/init.sh"
   done) > $root/$cfgversion/config/admin/init.sh
  setgroup u+rw,go-w _config $root/$cfgversion/config/admin/init.sh
  rm -f $root/$cfgversion/config/admin/{Clone,Install,Image,rsync,UpdateApiDocs}*
}

deploy_admin_post()
{
  case $variant in bare ) disable; return ;;
                   devtools ) disable; return ;;
  esac

  local pxlabel pxskip certs
  case $host in
    vocms0117 | vocms013[245689] | vocms0734| vocms073[189] | vocms0143 | vocms074[0123456] | vocms016[01235] | vocms076[06] | vocms030[67] | vocms0318 )
      pxlabel=cmsweb_backends ;;
    * )
      pxlabel=devvm_$(echo $host | tr - _) ;;
  esac

  if [ $(ls $root/$cfgversion/auth/proxy/PX* 2>/dev/null | wc -l) = 0 ]; then
    pxskip=true
  else
    pxskip=false
    if [ -r $root/certs/hostcert.pem ]; then
      certs=$root/certs
    elif [ -r /data/certs/hostcert.pem ]; then
      certs=/data/certs
    else
      note "ERROR: cannot find hostcert to use"
      exit 1
    fi
  fi

  if $nogroups; then
    # single-user mode, e.g. DQM GUI at P5, when no sudo access is given
    (mkcrontab
     echo "@reboot source $project_config/init.sh && $project_config/ServerMonitor -r"
     echo "37 */12 * * * source $project_config/init.sh && $project_config/ServerMonitor -q -r"
     $pxskip || echo "3 */3 * * * $project_config/ProxyRenew $certs $root/current/auth/proxy $pxlabel cms"
     echo "7 */12 * * * $project_config/LogArchive $root") |
     crontab -
  else
    (mkcrontab
     echo "@reboot sudo -E bash -c \"source $project_config/init.sh && $project_config/ServerMonitor -r\""
     echo "37 */12 * * * sudo -E bash -c \"source $project_config/init.sh && $project_config/ServerMonitor -q -r\""
     $pxskip || echo "3 */3 * * * $project_config/ProxyRenew $certs $root/current/auth/proxy $pxlabel cms"
     echo "7 */12 * * * $project_config/LogArchive $root") |
     crontab -
  fi

  case $host:$root in
    vocms0117:/data/srv | vocms0134:/data/srv | vocms0734:/data/srv | vocms0135:/data/srv | \
    vocms0158:/data/srv | vocms0160:/data/srv | vocms0760:/data/srv | vocms0162:/data/srv | vocms0164:/data/srv )
      klist -s # must have afs kerberos token
      LOGDIR=/afs/cern.ch/cms/cmsweb/log-archive
      (acrontab -l | { fgrep -v -e " $host $project_config/" || true; } | \
        { grep -v " $host .*/archive-log-files" || true; }
       echo "0 3 * * * $host $project_config/LogSave $root $LOGDIR/$host") | acrontab
      acrontab -l | fgrep " $host $project_config/" | sed "s|^[/*0-9 ]* $host ||" #| sh -x
      ;;
  esac

  $pxskip || { crontab -l | grep $project_config/ProxyRenew | sed 's|^[0-9*/ ]* ||' | sh -x; }
}
