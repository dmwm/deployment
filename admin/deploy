# vim: set ft=sh sw=2 ts=8 et :
deploy_admin_variants="default devtools bare"
deploy_admin_deps()
{
  deploy backend
}

deploy_admin_prep()
{
  mkproj
}

deploy_admin_sw()
{
  local p pkgs="rotatelogs pystack py2-psutil"
  case $variant in devtools )
    deploy_pkg comp cms+wmcore-devtools
    pkgs="$pkgs wmcore-devtools"
    ;;
  esac
  deploy_pkg comp external+py2-psutil
  deploy_pkg -a proxy/.turd comp external+rotatelogs
  (for p in $pkgs; do
     echo ". $root/current/apps/$p/etc/profile.d/init.sh"
   done) > $project_config/init.sh
  setgroup u+rw,go-w _config $project_config/init.sh
  rm -f $project_config/{Clone,Install,Image,rsync,UpdateApiDocs}*
}

deploy_admin_post()
{
  case $variant in bare ) disable; return ;;
                   devtools ) disable; return ;;
  esac

  local pxlabel pxskip certs
  case $host in
    vocms34 | vocms034 |  vocms127 |  vocms012[78] | vocms13[2345689] | vocms013[2345689] | vocms140 | vocms0140 | vocms16[0123] | vocms016[0123] )
      pxlabel=cmsweb_backends ;;
    * )
      pxlabel=devvm_$(echo $host | tr - _) ;;
  esac

  if [ $(ls $root/current/auth/proxy/PX* 2>/dev/null | wc -l) = 0 ]; then
    pxskip=true
  else
    pxskip=false
    if [ -r $root/certs/hostcert.pem ]; then
      certs=$root/certs
    elif [ -r /data/certs/hostcert.pem ]; then
      certs=/data/certs
    else
      note "ERROR: cannot find hostcert to use"
      exit 1
    fi
  fi

  (mkcrontab
   echo "@reboot . $project_config/init.sh && $project_config/ServerMonitor -r"
   echo "*/6 * * * * . $project_config/init.sh && $project_config/ServerMonitor -q -v"
   echo "37 */8 * * * . $project_config/init.sh && $project_config/ServerMonitor -q -r"
   $pxskip || echo "3 */3 * * * $project_config/ProxyRenew $certs $root/current/auth/proxy $pxlabel cms"
   echo "7 * * * * $project_config/LogArchive $root") |
   crontab -

  case $host:$root in
    vocms127:/data/srv | vocms134:/data/srv | vocms135:/data/srv | \
    vocms160:/data/srv | vocms162:/data/srv | \
    vocms0127:/data/srv | vocms0134:/data/srv | vocms0135:/data/srv | \
    vocms0160:/data/srv | vocms0162:/data/srv)
      klist -s # must have afs kerberos token
      LOGDIR=/afs/cern.ch/cms/cmsweb/log-archive
      (acrontab -l | { fgrep -v -e " $host $project_config/" || true; } | \
        { grep -v " $host .*/archive-log-files" || true; }
       echo "27 */3 * * * $host $project_config/LogSave $root $LOGDIR/$host") | acrontab
      acrontab -l | fgrep " $host $project_config/" | sed "s|^[/*0-9 ]* $host ||" | sh -x
      ;;
  esac

  $pxskip || { crontab -l | grep $project_config/ProxyRenew | sed 's|^[0-9*/ ]* ||' | sh -x; }
}
