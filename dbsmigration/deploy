# vim: set ft=sh sw=2 ts=8 et :

deploy_dbsmigration_variants="default prod preprod dev"

deploy_dbsmigration_deps()
{
  deploy $stage admin
  deploy $stage backend
  deploy $stage wmcore-auth
}

deploy_dbsmigration_prep()
{
  mkproj
  mkproxy
}

deploy_dbsmigration_sw()
{
  deploy_pkg -a dbs/DBSSecrets.py -l dbsmigration comp cms+dbs3-migration
  perl -p -i -e "s,\@\@JSONURL\@\@,https://github.com/dmwm/DBS/raw/master/view_instances.json,g" $root/$cfgversion/config/$project/manage
  perl -p -i -e "s,\@\@VARIANT\@\@,$variant,g" $root/$cfgversion/config/$project/Migration.py
}

deploy_dbsmigration_post()
{
  case $host in
    vocms013[89] | vocms0140 | vocms0307 | vocms0318 )
      disable
      ;;
    * )
      enable
      local cmd="$project_config/manage setinstances 'I did read documentation'"
      $nogroups || cmd="sudo -H -u _dbsmigration bashs -l -c \"${cmd}\" 2> /dev/null"
      (mkcrontab; sysboot; echo "*/30 * * * * $cmd") | crontab -
      eval $cmd # Force fetching of view instances during deployment
      ;;
  esac
}

deploy_dbsmigration_auth()
{
  for i in dbs3_p1_i2 dbs3_l_i2; do
    echo "db = {'connectUrl' : {"
    echo "      'reader' : 'oracle://reader:secret@instance',"
    echo "      'writer' : 'oracle://writer:secret@instance'"
    echo "       },"
    echo "      'databaseOwner' : 'owner'"
    echo "     }"
  done
}
