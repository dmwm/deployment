#!/bin/bash
##H Usage: manage ACTION [ARG] [SECURITY-STRING]
##H
##H Available actions:
##H   help            show this help
##H   version         get current version of the service
##H   status          show current service's status
##H   sysboot         start server from crond if not running
##H   restart         (re)start the service
##H   start           (re)start the service
##H   stop            stop the service
##H   pushapps        push couch applications
##H   pushreps        push couch replications
##H   compact         compact database ARG
##H   compactviews    compact database views for design doc ARG ARG
##H   cleanviews      clean view named ARG
##H
##H For more details please refer to operations page:
##H   https://twiki.cern.ch/twiki/bin/view/CMS/CouchDB

if [ $(id -un)  = cmsweb ]; then
  echo "ERROR: please use another account" 1>&2
  exit 1
fi

case $(uname) in Darwin )
  md5sum() { md5 -r ${1+"$@"}; }
  ;;
esac

echo_e=-e
case $(uname) in Darwin )
  md5sum() { md5 -r ${1+"$@"}; }
  echo_e=
  ;;
esac

ME=$(basename $(dirname $0))
TOP=$(cd $(dirname $0)/../../.. && pwd)
ROOT=$(cd $(dirname $0)/../.. && pwd)
CFGDIR=$(cd $(dirname $0) && pwd)
LOGDIR=$TOP/logs/$ME
STATEDIR=$TOP/state/$ME
KEYFILE=$ROOT/auth/$ME/hmackey.ini
COLOR_OK="\\033[0;32m"
COLOR_WARN="\\033[0;31m"
COLOR_NORMAL="\\033[0;39m"

. $ROOT/apps/$ME/etc/profile.d/init.sh

export BIGCOUCH_ROOT
# check if I need HOME setup for running bigcouch
export HOME=$STATEDIR

# Detect core count
CORES=`grep -E "^processor" /proc/cpuinfo |wc -l`
if [ "$CORES" = "1" ]; then
    BEAM=beam
else
    BEAM=beam.smp
fi

# Start service conditionally on crond restart.
sysboot()
{
  dostart=false
  if [ $(pgrep -u $(id -u) -f " bigcouch" | wc -l) = 0 ]; then
      dostart=true
  fi
  $dostart && start
}

start() {
    echo -n $"Starting $ME: "
    # go to location of config files
    cd $BIGCOUCH_ROOT/etc
    nohup $BIGCOUCH_ROOT/bin/bigcouch 2>&1 1>& /dev/null < /dev/null &
#    $BIGCOUCH_ROOT/bin/bigcouch
#       </dev/null 2>&1 | rotatelogs $LOGDIR/bigcouch-%Y%m%d.log 86400 >/dev/null 2>&1 &
}

stop() {
    echo "stopping $ME"
    for pid in $(pgrep -u $(id -u) -f " bigcouch"); do
        kill -9 $pid
    done
    for pid in $(pgrep -u $(id -u) -f "[/]epmd"); do
        kill -9 $pid
    done
}
status() {
    pid=$(pgrep -u $(id -u) -f " bigcouch" | sort -n)
    if [ X"$pid" = X ]; then
        echo $echo_e "$ME $pat is ${COLOR_WARN}NOT RUNNING${COLOR_NORMAL}."
    else
        echo $echo_e "$ME $pat is ${COLOR_OK}RUNNING${COLOR_NORMAL}, PID" $pid
    fi
}

restart() {
    stop
    start
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart|reload)
        restart
        ;;
    *)
        echo $"Usage: $0 (start|stop|restart|status)"
        exit 1
esac

exit $?
