# vim: set ft=sh sw=2 ts=8 et :
deploy_workqueue_variants="default prod preprod dev"

deploy_workqueue_deps()
{
  deploy $stage backend
  deploy $stage wmcore-auth
  deploy $stage couchdb
  deploy $stage reqmgr2 $variant
}

deploy_workqueue_prep()
{
  mkproj cache
}

deploy_workqueue_sw()
{
  deploy_pkg \
    -a dmwm-service-cert.pem:wmcore/dmwm-service-cert.pem \
    -a dmwm-service-key.pem:wmcore/dmwm-service-key.pem \
    comp cms+workqueue

  if grep -rq "replace me" $project_auth; then
    note "WARNING: replace certificates in $project_auth with real ones"
  else :; fi

  case $variant in
    prod )    base_url="https://cmsweb.cern.ch"         ;;
    preprod ) base_url="https://cmsweb-testbed.cern.ch" ;;
    dev )     base_url="https://cmsweb-dev.cern.ch"     ;;
    * )       base_url="https://`hostname -f`"          ;;
  esac
  perl -p -i -e "s{\"\@\@BASE_URL\@\@\"}{\"$base_url\"}g;" \
       $root/$cfgversion/config/$project/config.py
}

deploy_workqueue_post()
{
  case $host in vocms013[12689] |vocms073[89] | vocms014[12] | vocms016[135] ) disable;; * ) enable;; esac
  
  # Do cache cleanup
  local cmd="rm -rf $root/state/workqueue/cache/*"
  $nogroups || cmd="sudo -H -u _workqueue bashs -l -c \"${cmd}\""
  eval $cmd

  # Tell couch to push workqueue apps on the next restart
  for couch in couchdb:5984; do
    echo "$project_config/manage pushcouchapp http://localhost:${couch##*:}" \
      > $root/state/${couch%%:*}/stagingarea/workqueue
  done
  
  (mkcrontab; sysboot) | crontab -
}

deploy_workqueue_auth()
{
  case $1 in
    */*-cert.pem )
      echo "replace me with your dmwm service certificate" ;;
    */*-key.pem )
      echo "replace me with your dmwm service key" ;;
  esac
}
