# vim: set ft=sh sw=2 ts=8 et :
deploy_workqueue_variants="default prod preprod dev"

deploy_workqueue_deps()
{
  deploy $stage backend
  deploy $stage wmcore-auth
  deploy $stage couchdb
  deploy $stage reqmgr2 $variant
}

deploy_workqueue_prep()
{
  mkproj cache
}

deploy_workqueue_sw()
{
  deploy_pkg \
    -a dmwm-service-cert.pem:wmcore/dmwm-service-cert.pem \
    -a dmwm-service-key.pem:wmcore/dmwm-service-key.pem \
    -a WorkQueueSecrets.py:workqueue/WorkQueueSecrets.py \
    comp cms+workqueue

  if grep -rq "replace me" $project_auth; then
    note "WARNING: replace certificates in $project_auth with real ones"
  else :; fi

  # use rucio testbed for anything that is not production
  rucio_host_url=http://cms-rucio-int.cern.ch
  rucio_auth_url=https://cms-rucio-auth-int.cern.ch
  case $variant in
    prod )
        base_url="https://cmsweb.cern.ch"
        rucio_host_url=http://cms-rucio.cern.ch
        rucio_auth_url=https://cms-rucio-auth.cern.ch
        ;;
    preprod )
        base_url="https://cmsweb-testbed.cern.ch"
        ;;
    dev )
        base_url="https://cmsweb-dev.cern.ch"
        ;;
    * )
        base_url="https://`hostname -f`"
        ;;
  esac
  perl -p -i -e "s{\"\@\@BASE_URL\@\@\"}{\"$base_url\"}g;" \
       $root/$cfgversion/config/$project/config.py

  # setup rucio configuration file
  mkdir -p $root/$cfgversion/config/$project/etc
  mv $root/$cfgversion/config/$project/rucio.cfg $root/$cfgversion/config/$project/etc/
  perl -p -i -e "s{RUCIO_HOST_OVERWRITE}{$rucio_host_url}g; \
                 s{RUCIO_AUTH_OVERWRITE}{$rucio_auth_url}g" \
       $root/$cfgversion/config/$project/etc/rucio.cfg

}

deploy_workqueue_post()
{
  # in practice, enabled it on private VMs, vocms0731 (preprod) and vocms0740 (prod)
  case $host in
    vocms013[2689] | vocms073[89] | vocms074[1234] | vocms016[135] | vocms0766 )
      disable;;
    * )
      enable;;
    esac
  
  # Do cache cleanup
  local cmd="rm -rf $root/state/workqueue/cache/*"
  $nogroups || cmd="sudo -H -u _workqueue bashs -l -c \"${cmd}\""
  eval $cmd

  # Tell couch to push workqueue apps on the next restart
  for couch in couchdb:5984; do
    echo "$project_config/manage pushcouchapp http://localhost:${couch##*:}" \
      > $root/state/${couch%%:*}/stagingarea/workqueue
  done
  
  (mkcrontab; sysboot) | crontab -
}

deploy_workqueue_auth()
{
  case $1 in
    */*-cert.pem )
      echo "replace me with your dmwm service certificate" ;;
    */*-key.pem )
      echo "replace me with your dmwm service key" ;;
    */WorkQueueSecrets.py )
      echo 'USER_AMQ = "FOO_FIXME"'
      echo 'PASS_AMQ = "BAR_FIXME"'
      echo 'AMQ_TOPIC = "FOOBAR_FIXME"' ;;
  esac
}
